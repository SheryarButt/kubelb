
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: globalloadbalancers.kubelb.k8c.io
spec:
  group: kubelb.k8c.io
  names:
    kind: GlobalLoadBalancer
    listKind: GlobalLoadBalancerList
    plural: globalloadbalancers
    singular: globalloadbalancer
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: GlobalLoadBalancer is the Schema for the globalloadbalancers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: 'NOTE: json tags are required.  Any new fields you add must
            have json tags for the fields to be serialized. Todo: Due to the usage
            of existing types the description is probably wrong. Check the generated
            CRD file GlobalLoadBalancerSpec defines the desired state of GlobalLoadBalancer'
          properties:
            ports:
              description: The list of ports that are exposed by the load balancer
                service.
              items:
                description: ServicePort contains information on service's port.
                properties:
                  name:
                    description: The name of this port within the service. This must
                      be a DNS_LABEL. All ports within a ServiceSpec must have unique
                      names. When considering the endpoints for a Service, this must
                      match the 'name' field in the EndpointPort. Optional if only
                      one ServicePort is defined on this service.
                    type: string
                  nodePort:
                    description: 'The port on each node on which this service is exposed
                      when type=NodePort or LoadBalancer. Usually assigned by the
                      system. If specified, it will be allocated to the service if
                      unused or else creation of the service will fail. Default is
                      to auto-allocate a port if the ServiceType of this Service requires
                      one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                    format: int32
                    type: integer
                  port:
                    description: The port that will be exposed by this service.
                    format: int32
                    type: integer
                  protocol:
                    description: The IP protocol for this port. Supports "TCP", "UDP",
                      and "SCTP". Default is TCP.
                    type: string
                  targetPort:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'Number or name of the port to access on the pods
                      targeted by the service. Number must be in the range 1 to 65535.
                      Name must be an IANA_SVC_NAME. If this is a string, it will
                      be looked up as a named port in the target Pod''s container
                      ports. If this is not specified, the value of the ''port'' field
                      is used (an identity map). This field is ignored for services
                      with clusterIP=None, and should be omitted or set equal to the
                      ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                    x-kubernetes-int-or-string: true
                required:
                - port
                type: object
              type: array
            subsets:
              description: Sets of addresses and ports that comprise an exposed user
                service on a cluster.
              items:
                description: 'EndpointSubset is a group of addresses with a common
                  set of ports. The expanded set of endpoints is the Cartesian product
                  of Addresses x Ports. For example, given:   {     Addresses: [{"ip":
                  "10.10.1.1"}, {"ip": "10.10.2.2"}],     Ports:     [{"name": "a",
                  "port": 8675}, {"name": "b", "port": 309}]   } The resulting set
                  of endpoints can be viewed as:     a: [ 10.10.1.1:8675, 10.10.2.2:8675
                  ],     b: [ 10.10.1.1:309, 10.10.2.2:309 ]'
                properties:
                  addresses:
                    description: IP addresses which offer the related ports that are
                      marked as ready. These endpoints should be considered safe for
                      load balancers and clients to utilize.
                    items:
                      description: EndpointAddress is a tuple that describes single
                        IP address.
                      properties:
                        hostname:
                          description: The Hostname of this endpoint
                          type: string
                        ip:
                          description: 'The IP of this endpoint. May not be loopback
                            (127.0.0.0/8), link-local (169.254.0.0/16), or link-local
                            multicast ((224.0.0.0/24). IPv6 is also accepted but not
                            fully supported on all platforms. Also, certain kubernetes
                            components, like kube-proxy, are not IPv6 ready. TODO:
                            This should allow hostname or IP, See #4447.'
                          type: string
                        nodeName:
                          description: 'Optional: Node hosting this endpoint. This
                            can be used to determine endpoints local to a node.'
                          type: string
                        targetRef:
                          description: Reference to object providing the endpoint.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                      required:
                      - ip
                      type: object
                    type: array
                  notReadyAddresses:
                    description: IP addresses which offer the related ports but are
                      not currently marked as ready because they have not yet finished
                      starting, have recently failed a readiness check, or have recently
                      failed a liveness check.
                    items:
                      description: EndpointAddress is a tuple that describes single
                        IP address.
                      properties:
                        hostname:
                          description: The Hostname of this endpoint
                          type: string
                        ip:
                          description: 'The IP of this endpoint. May not be loopback
                            (127.0.0.0/8), link-local (169.254.0.0/16), or link-local
                            multicast ((224.0.0.0/24). IPv6 is also accepted but not
                            fully supported on all platforms. Also, certain kubernetes
                            components, like kube-proxy, are not IPv6 ready. TODO:
                            This should allow hostname or IP, See #4447.'
                          type: string
                        nodeName:
                          description: 'Optional: Node hosting this endpoint. This
                            can be used to determine endpoints local to a node.'
                          type: string
                        targetRef:
                          description: Reference to object providing the endpoint.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                      required:
                      - ip
                      type: object
                    type: array
                  ports:
                    description: Port numbers available on the related IP addresses.
                    items:
                      description: EndpointPort is a tuple that describes a single
                        port.
                      properties:
                        name:
                          description: The name of this port.  This must match the
                            'name' field in the corresponding ServicePort. Must be
                            a DNS_LABEL. Optional only if one port is defined.
                          type: string
                        port:
                          description: The port number of the endpoint.
                          format: int32
                          type: integer
                        protocol:
                          description: The IP protocol for this port. Must be UDP,
                            TCP, or SCTP. Default is TCP.
                          type: string
                      required:
                      - port
                      type: object
                    type: array
                type: object
              type: array
            type:
              description: Type of the load balancer This deciedes which kind of load
                balancing will be used and which features are enabled
              type: string
          type: object
        status:
          description: GlobalLoadBalancerStatus defines the observed state of GlobalLoadBalancer
          properties:
            loadBalancer:
              description: LoadBalancer contains the current status of the load-balancer,
                if one is present.
              properties:
                ingress:
                  description: Ingress is a list containing ingress points for the
                    load-balancer. Traffic intended for the service should be sent
                    to these ingress points.
                  items:
                    description: 'LoadBalancerIngress represents the status of a load-balancer
                      ingress point: traffic intended for the service should be sent
                      to an ingress point.'
                    properties:
                      hostname:
                        description: Hostname is set for load-balancer ingress points
                          that are DNS based (typically AWS load-balancers)
                        type: string
                      ip:
                        description: IP is set for load-balancer ingress points that
                          are IP based (typically GCE or OpenStack load-balancers)
                        type: string
                    type: object
                  type: array
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
