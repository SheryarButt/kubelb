---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: tcploadbalancers.kubelb.k8c.io
spec:
  group: kubelb.k8c.io
  names:
    kind: TCPLoadBalancer
    listKind: TCPLoadBalancerList
    plural: tcploadbalancers
    shortNames:
    - tcplb
    singular: tcploadbalancer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TCPLoadBalancer is the Schema for the tcploadbalancers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TCPLoadBalancerSpec defines the desired state of TCPLoadBalancer
            properties:
              endpoints:
                description: Sets of addresses and ports that comprise an exposed
                  user service on a cluster.
                items:
                  description: "LoadBalancerEndpoints is a group of addresses with
                    a common set of ports. The expanded set of endpoints is the Cartesian
                    product of Addresses x Ports. For example, given: \n { Addresses:
                    [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}], Ports:     [{\"name\":
                    \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}] } \n
                    The resulting set of endpoints can be viewed as: \n a: [ 10.10.1.1:8675,
                    10.10.2.2:8675 ], b: [ 10.10.1.1:309, 10.10.2.2:309 ]"
                  properties:
                    addresses:
                      description: IP addresses which offer the related ports that
                        are marked as ready. These endpoints should be considered
                        safe for load balancers and clients to utilize.
                      items:
                        description: EndpointAddress is a tuple that describes single
                          IP address.
                        properties:
                          hostname:
                            description: The Hostname of this endpoint
                            type: string
                          ip:
                            description: The IP of this endpoint. May not be loopback
                              (127.0.0.0/8), link-local (169.254.0.0/16), or link-local
                              multicast ((224.0.0.0/24).
                            minLength: 7
                            type: string
                        required:
                        - ip
                        type: object
                      minItems: 1
                      type: array
                    ports:
                      description: Port numbers available on the related IP addresses.
                      items:
                        description: EndpointPort is a tuple that describes a single
                          port.
                        properties:
                          name:
                            description: The name of this port.  This must match the
                              'name' field in the corresponding ServicePort. Must
                              be a DNS_LABEL. Optional only if one port is defined.
                            type: string
                          port:
                            description: The port number of the endpoint.
                            format: int32
                            type: integer
                          protocol:
                            default: TCP
                            description: The IP protocol for this port. Must be TCP.
                              Default is TCP.
                            enum:
                            - TCP
                            type: string
                        required:
                        - port
                        type: object
                      minItems: 1
                      type: array
                  type: object
                minItems: 1
                type: array
              ports:
                description: The list of ports that are exposed by the load balancer
                  service. only needed for layer 4
                items:
                  description: LoadBalancerPort contains information on service's
                    port.
                  properties:
                    name:
                      description: The name of this port within the service. This
                        must be a DNS_LABEL. All ports within a Spec must have unique
                        names. When considering the endpoints for a Service, this
                        must match the 'name' field in the EndpointPort. Optional
                        if only one ServicePort is defined on this service.
                      type: string
                    port:
                      description: The port that will be exposed by the LoadBalancer.
                      format: int32
                      type: integer
                    protocol:
                      default: TCP
                      description: The IP protocol for this port. Supports "TCP".
                        Default is TCP.
                      enum:
                      - TCP
                      type: string
                  required:
                  - port
                  type: object
                type: array
              type:
                default: ClusterIP
                description: 'type determines how the Service is exposed. Defaults
                  to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort,
                  and LoadBalancer. "ExternalName" maps to the specified externalName.
                  "ClusterIP" allocates a cluster-internal IP address for load-balancing
                  to endpoints. Endpoints are determined by the selector or if that
                  is not specified, by manual construction of an Endpoints object.
                  If clusterIP is "None", no virtual IP is allocated and the endpoints
                  are published as a set of endpoints rather than a stable IP. "NodePort"
                  builds on ClusterIP and allocates a port on every node which routes
                  to the clusterIP. "LoadBalancer" builds on NodePort and creates
                  an external load-balancer (if supported in the current cloud) which
                  routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                type: string
            type: object
          status:
            description: TCPLoadBalancerStatus defines the observed state of TCPLoadBalancer
            properties:
              loadBalancer:
                description: LoadBalancer contains the current status of the load-balancer,
                  if one is present.
                properties:
                  ingress:
                    description: Ingress is a list containing ingress points for the
                      load-balancer. Traffic intended for the service should be sent
                      to these ingress points.
                    items:
                      description: 'LoadBalancerIngress represents the status of a
                        load-balancer ingress point: traffic intended for the service
                        should be sent to an ingress point.'
                      properties:
                        hostname:
                          description: Hostname is set for load-balancer ingress points
                            that are DNS based (typically AWS load-balancers)
                          type: string
                        ip:
                          description: IP is set for load-balancer ingress points
                            that are IP based (typically GCE or OpenStack load-balancers)
                          type: string
                        ports:
                          description: Ports is a list of records of service ports
                            If used, every port defined in the service should have
                            an entry in it
                          items:
                            properties:
                              error:
                                description: 'Error is to record the problem with
                                  the service port The format of the error shall comply
                                  with the following rules: - built-in error values
                                  shall be specified in this file and those shall
                                  use CamelCase names - cloud provider specific error
                                  values must have names that comply with the format
                                  foo.example.com/CamelCase. --- The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              port:
                                description: Port is the port number of the service
                                  port of which status is recorded here
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: 'Protocol is the protocol of the service
                                  port of which status is recorded here The supported
                                  values are: "TCP", "UDP", "SCTP"'
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
