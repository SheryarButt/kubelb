apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: kubelb
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kubebuilder
    app.kubernetes.io/part-of: kubebuilder
    app.kubernetes.io/managed-by: kustomize
  name: kubelb
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: kubelb
  name: envoycp
  namespace: kubelb
spec:
  ports:
    - port: 8001
      targetPort: 8001
  selector:
    control-plane: manager
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubelb
  namespace: kubelb
  labels:
    control-plane: kubelb
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: kubelb
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kubebuilder
    app.kubernetes.io/part-of: kubebuilder
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: kubelb
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: kubelb
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution. 
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: manager
        args:
        - --enable-leader-election
        image: controller:latest
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 65532
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: kubelb
      terminationGracePeriodSeconds: 10
